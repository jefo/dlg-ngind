import { setPortAdapter } from "@maxdev1/sotajs";
import { composeChatApp, startChatServiceUseCase, userInteractedOutPort } from "chat";
import { 
  composeApp as composeBotPersonaApp, 
  processUserInputUseCase, 
  startConversationUseCase, 
  componentRenderOutPort, 
  botPersonaDefinedOutPort, 
  defineBotPersonaUseCase
} from "bot-persona";
import { telegramPresenterAdapter } from "chat/src/infrastructure/platform/telegram.presenter";
import { jtbdQualifierBotDefinition } from "./jtbd-bot-definition"; // –í—ã–Ω–æ—Å–∏–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª

async function main() {
  console.log("üöÄ Starting Showcase Telegram Bot...");

  // 1. –°–æ–±–∏—Ä–∞–µ–º –æ–±–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  composeChatApp({ channel: 'telegram' });
  composeBotPersonaApp();

  // 2. –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º

  // –ö–æ–≥–¥–∞ @chat –ª–æ–≤–∏—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏, –æ–Ω –≤—ã–∑—ã–≤–∞–µ—Ç –ø–æ—Ä—Ç userInteractedOutPort.
  // –ú—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —ç—Ç–æ—Ç –ø–æ—Ä—Ç –∏ –≤—ã–∑—ã–≤–∞–µ–º use case –∏–∑ @bot-persona.
  setPortAdapter(userInteractedOutPort, async (interaction) => {
    console.log(`[Orchestrator]: Got interaction from @chat, routing to @bot-persona...`);
    await processUserInputUseCase(interaction);
  });

  // –ö–æ–≥–¥–∞ @bot-persona —Ö–æ—á–µ—Ç —á—Ç–æ-—Ç–æ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å, –æ–Ω –≤—ã–∑—ã–≤–∞–µ—Ç componentRenderOutPort.
  // –ú—ã –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –Ω–µ–≥–æ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–µ–∑–µ–Ω—Ç–µ—Ä –∏–∑ @chat –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ Telegram.
  setPortAdapter(componentRenderOutPort, telegramPresenterAdapter);

  // 3. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞

  // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º ID —Å–æ–∑–¥–∞–Ω–Ω–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å –¥–∏–∞–ª–æ–≥
  let botPersonaId: string;
  setPortAdapter(botPersonaDefinedOutPort, async (dto) => {
    console.log(`[Orchestrator]: Bot Persona "${dto.name}" defined with ID: ${dto.personaId}`)
    botPersonaId = dto.personaId;
  });

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ª–∏—á–Ω–æ—Å—Ç—å –Ω–∞—à–µ–≥–æ JTBD-–±–æ—Ç–∞
  await defineBotPersonaUseCase(jtbdQualifierBotDefinition);

  if (!botPersonaId) {
    console.error("[Orchestrator]: Could not define Bot Persona. Shutting down.");
    return;
  }

  // TODO: –õ–æ–≥–∏–∫—É —Å—Ç–∞—Ä—Ç–∞ –¥–∏–∞–ª–æ–≥–∞ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —É–ª—É—á—à–∏—Ç—å.
  // –°–µ–π—á–∞—Å –º—ã –ø—Ä–æ—Å—Ç–æ —Å—Ç–∞—Ä—Ç—É–µ–º –æ–¥–∏–Ω –¥–∏–∞–ª–æ–≥ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏.
  // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏, –Ω—É–∂–Ω–æ —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
  const demoChatId = `telegram:${process.env.DEMO_CHAT_ID}`;
  if (!process.env.DEMO_CHAT_ID) {
    console.warn("[Orchestrator]: DEMO_CHAT_ID env variable is not set. Cannot start demo conversation.")
  } else {
    await startConversationUseCase({ botPersonaId, chatId: demoChatId });
  }

  // 4. –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–∏—Å –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ Telegram
  await startChatServiceUseCase({ 
    channel: 'telegram', 
    config: { token: process.env.TELEGRAM_BOT_TOKEN } 
  });

  console.log(`‚úÖ Showcase Telegram Bot is running. Send a message to your bot or press a button.`);
}

main().catch(console.error);